// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Negocio.Context;

#nullable disable

namespace Negocio.Migrations
{
    [DbContext(typeof(GestionDatabaseContext))]
    [Migration("20231221094036_migracion")]
    partial class migracion
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Modelos.Modelos.Beneficio", b =>
                {
                    b.Property<Guid>("BeneficioId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BeneficioID");

                    b.Property<string>("Cobertura")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("Costos")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("EmpleadoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("EmpleadoID");

                    b.HasKey("BeneficioId");

                    b.HasIndex("EmpleadoId");

                    b.ToTable("Beneficios");
                });

            modelBuilder.Entity("Modelos.Modelos.Departamento", b =>
                {
                    b.Property<Guid>("DepartamentoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DepartamentoID");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreDepartamento")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("DepartamentoId");

                    b.ToTable("Departamentos");
                });

            modelBuilder.Entity("Modelos.Modelos.Empleado", b =>
                {
                    b.Property<Guid>("EmpleadoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("EmpleadoID");

                    b.Property<string>("Apellido")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CorreoElectronico")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("DepartamentoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DepartamentoID");

                    b.Property<string>("Direccion")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DocumentosRelevantes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstadoEmpleo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("FechaContratacion")
                        .HasColumnType("date");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("date");

                    b.Property<byte[]>("Foto")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Genero")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MensajesYanuncios")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MensajesYAnuncios");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("EmpleadoId");

                    b.HasIndex("DepartamentoId");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("Modelos.Modelos.EvaluacionDesempeno", b =>
                {
                    b.Property<Guid>("EvaluacionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("EvaluacionID");

                    b.Property<string>("CompetenciasEvaluadas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("EmpleadoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("EmpleadoID");

                    b.Property<DateTime?>("FechaEvaluacion")
                        .HasColumnType("date");

                    b.Property<string>("Objetivos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Responsabilidades")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resultados")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EvaluacionId")
                        .HasName("PK__Evaluaci__99ABA8A56223E901");

                    b.HasIndex("EmpleadoId");

                    b.ToTable("EvaluacionDesempeno", (string)null);
                });

            modelBuilder.Entity("Modelos.Modelos.HistorialPago", b =>
                {
                    b.Property<Guid>("HistorialPagoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("HistorialPagoID");

                    b.Property<string>("DetallesTransaccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaPago")
                        .HasColumnType("date");

                    b.Property<Guid?>("NominaId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("NominaID");

                    b.HasKey("HistorialPagoId");

                    b.HasIndex("NominaId");

                    b.ToTable("HistorialPagos");
                });

            modelBuilder.Entity("Modelos.Modelos.Nomina", b =>
                {
                    b.Property<Guid>("NominaId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("NominaID");

                    b.Property<decimal?>("Bonificaciones")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("CalculosSalariales")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("Deducciones")
                        .HasColumnType("decimal(10,2)");

                    b.Property<Guid?>("EmpleadoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("EmpleadoID");

                    b.Property<DateTime?>("FechaGeneracion")
                        .HasColumnType("date");

                    b.Property<string>("PeriodoPago")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("TotalPagar")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("NominaId");

                    b.HasIndex("EmpleadoId");

                    b.ToTable("Nomina", (string)null);
                });

            modelBuilder.Entity("Modelos.Modelos.TareasProyecto", b =>
                {
                    b.Property<Guid>("TareaId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TareaID");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("EmpleadoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("EmpleadoID");

                    b.Property<string>("Estado")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("FechaAsignacion")
                        .HasColumnType("date");

                    b.Property<DateTime?>("FechaVencimiento")
                        .HasColumnType("date");

                    b.HasKey("TareaId")
                        .HasName("PK__TareasPr__5CD83671F2FBBFA2");

                    b.HasIndex("EmpleadoId");

                    b.ToTable("TareasProyectos");
                });

            modelBuilder.Entity("Modelos.Modelos.Usuario", b =>
                {
                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UsuarioID");

                    b.Property<string>("ClaveAcceso")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NombreUsuario")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Rol")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Modelos.Modelos.Beneficio", b =>
                {
                    b.HasOne("Modelos.Modelos.Empleado", "Empleado")
                        .WithMany("Beneficios")
                        .HasForeignKey("EmpleadoId")
                        .HasConstraintName("FK__Beneficio__Emple__31EC6D26");

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("Modelos.Modelos.Empleado", b =>
                {
                    b.HasOne("Modelos.Modelos.Departamento", "Departamento")
                        .WithMany("Empleados")
                        .HasForeignKey("DepartamentoId")
                        .HasConstraintName("FK__Empleados__Depar__267ABA7A");

                    b.Navigation("Departamento");
                });

            modelBuilder.Entity("Modelos.Modelos.EvaluacionDesempeno", b =>
                {
                    b.HasOne("Modelos.Modelos.Empleado", "Empleado")
                        .WithMany("EvaluacionDesempenos")
                        .HasForeignKey("EmpleadoId")
                        .HasConstraintName("FK__Evaluacio__Emple__34C8D9D1");

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("Modelos.Modelos.HistorialPago", b =>
                {
                    b.HasOne("Modelos.Modelos.Nomina", "Nomina")
                        .WithMany("HistorialPagos")
                        .HasForeignKey("NominaId")
                        .HasConstraintName("FK__Historial__Nomin__2F10007B");

                    b.Navigation("Nomina");
                });

            modelBuilder.Entity("Modelos.Modelos.Nomina", b =>
                {
                    b.HasOne("Modelos.Modelos.Empleado", "Empleado")
                        .WithMany("Nominas")
                        .HasForeignKey("EmpleadoId")
                        .HasConstraintName("FK__Nomina__Empleado__2C3393D0");

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("Modelos.Modelos.TareasProyecto", b =>
                {
                    b.HasOne("Modelos.Modelos.Empleado", "Empleado")
                        .WithMany("TareasProyectos")
                        .HasForeignKey("EmpleadoId")
                        .HasConstraintName("FK__TareasPro__Emple__29572725");

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("Modelos.Modelos.Departamento", b =>
                {
                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("Modelos.Modelos.Empleado", b =>
                {
                    b.Navigation("Beneficios");

                    b.Navigation("EvaluacionDesempenos");

                    b.Navigation("Nominas");

                    b.Navigation("TareasProyectos");
                });

            modelBuilder.Entity("Modelos.Modelos.Nomina", b =>
                {
                    b.Navigation("HistorialPagos");
                });
#pragma warning restore 612, 618
        }
    }
}
